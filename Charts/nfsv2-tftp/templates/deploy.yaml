
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.ioc_group }}-nfs-tftp
  labels:
    app: {{ .Release.Name }}
    location: {{ .Values.location }}
    ioc_group: {{ .Values.ioc_group }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.ioc_group }}-nfs-tftp
  template:
    metadata:
      labels:
        app: {{ .Values.ioc_group }}-nfs-tftp
        location: {{ .Values.location }}
        ioc_group: {{ .Values.ioc_group }}
    spec:
      volumes:
        - name: ioc-binaries-volume
          persistentVolumeClaim:
            claimName: {{ .Values.ioc_group }}-binaries-claim
        - name: ioc-autosave-volume
          emptyDir: {}
        # TODO - we should rsync to this volume from the autosave PV during
        # runtime and rsync from it at startup
        - name: autosave-backing-store
          persistentVolumeClaim:
            claimName: {{ .Values.ioc_group }}-autosave-claim

      containers:
        - name: server
          image: ghcr.io/epics-containers/nfsv2-tftp-server:0.1.1
          ports:
            - containerPort: 2049
              protocol: UDP
            - containerPort: 20048
              protocol: UDP
            - containerPort: 111
              protocol: UDP
            - containerPort: 69
              protocol: UDP
          command: ["/bin/bash"]
          args: ["-c", "bash /scripts/startup.sh && sleep infinity"]

          resources:
            limits:
              memory: 50Mi
              cpu: 100m
            requests:
              memory: 20Mi
              cpu: 50m

          volumeMounts:
            - mountPath: "/iocs"
              name: ioc-binaries-volume
            - mountPath: "/autosave"
              name: ioc-autosave-volume
            - mountPath: "/autosave-backing-store"
              name: autosave-backing-store

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.ioc_group }}-nfs-tftp
  labels:
    app: {{ .Values.ioc_group }}-nfs-tftp
    location: {{ .Values.location }}
    ioc_group: {{ .Values.ioc_group }}
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  ports:
    - name: rpcbind
      port: 111
      protocol: UDP
      targetPort: 111
    - name: nfsd
      port: 2049
      protocol: UDP
      targetPort: 2049
    - name: mountd
      port: 20048
      protocol: UDP
      targetPort: 20048
    - name: tftp
      port: 69
      protocol: UDP
      targetPort: 69
  # a j20 static IP
  loadBalancerIP: {{ .Values.static_ip }}
  sessionAffinity: None
  selector:
    app: {{ .Values.ioc_group }}-nfs-tftp
