{{- $location := default .Values.global.location .Values.location | required "ERROR - You must supply location or global.location" -}}
{{- $ioc_group := default .Values.global.ioc_group .Values.ioc_group | required "ERROR - You must supply ioc_group or global.ioc_group" -}}
{{- $opisClaim := default (print $ioc_group "-opi-claim") .Values.opisClaim -}}

kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    location: {{ $location }}
    ioc_group: {{ $ioc_group }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        location: {{ $location }}
        ioc_group: {{ $ioc_group }}
      annotations:
      {{ if and .Values.global .Values.global.files -}}
      {{- range $k, $v := .Values.global.files }}
        {{ $k }}-sha256: {{ $v | sha256sum }}
      {{- end }}
      {{- end }}
    spec:
      volumes:
        - name: html-volume
          persistentVolumeClaim:
            claimName: {{ $opisClaim }}
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-nginx-config
      containers:
        - name: server
          image: {{ .Values.image }}
          resources:
            requests:
              memory: 100Mi
              cpu: 200m
            limits:
              memory: 500Mi
              cpu: 600m
          ports:
            - containerPort: 90
              protocol: TCP
          volumeMounts:
            # - mountPath: /opis
            - mountPath: /usr/share/nginx/html
              name: html-volume
            # mount a config file over the default nginx config
            - mountPath: /etc/nginx/nginx.conf
              name: config-volume
              subPath: nginx.conf
      {{- if .Values.affinity }}
      affinity:
{{  toYaml .Values.affinity | indent 8}}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{  toYaml .Values.tolerations | indent 8}}
      {{- end }}

---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    location: {{ $location }}
    ioc_group: {{ $ioc_group }}
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
  sessionAffinity: None
  selector:
    app: {{ .Release.Name }}
